process PROD = {

  untracked PSet maxEvents = {
    untracked int32 input = 10
  }

#_________________________________________________    
  service = MessageLogger {
    untracked vstring destinations =  { "cout" }        # send messages to cout
    untracked vstring debugModules =  { "HydjetProducer" }# messages comming form HydjetProducer (replace with "*" for all modules, or, add new ones separated by comma)
    
    untracked PSet cout = {
        untracked string threshold = "DEBUG" 	 # the lower severity limit of the printed messages (default is 'INFO')
     #   untracked PSet default     = { untracked int32 limit =  0 }   # kill all messages in the log
     #   untracked PSet DEBUG	   = { untracked int32 limit = -1 }   # print all debug messages
        untracked PSet INFO	   = { untracked int32 limit = -1 }   # print all info messages
    }
  }

  service = TFileService { 
    string fileName = "myhistograms.root"
  }
	
#_________________________________________________    
# control point for all seeds
#
  service = RandomNumberGeneratorService {
    PSet hydjet = {
      untracked uint32 initialSeed = 98765
    }
  }


#__________________________________________________
# physics event generation
#

  module hydjet = HydjetProducer {
    # initialize pythia
    PSet PythiaParameters = { 
	# This is a vector of ParameterSet names to be read, in this order
        # They are  in the include files 
	# pythiaDefault HAS TO BE ALWAYS included
	# If just the hard QCD dijets wanted, comment out the photons corresponding include and parameter set
	vstring parameterSets = {
		"pythiaDefault"        # MSEL=1 (hard QCD dijets in) + hydjet needed initializations
	       ,"pythiaPromptPhotons"  # ISUB=14,18,29,114,115
		}
	include "GeneratorInterface/PyquenInterface/data/pyquenPythiaDefault.cfi"
    }	

    # default hydjet parameters 
    include "GeneratorInterface/HydjetInterface/data/hydjetSourceDefault.cfi"
  }


# whatever parameters from the hydjetProducerDefault you want to modify, do it following the exampels
replace hydjet.bFixed        = 6.               # fixed impact param (fm); valid only if cflag_=0
replace hydjet.bMax          = 0.               # max impact param (fm)
replace hydjet.bMin          = 0.               # min impact param (fm)
replace hydjet.cFlag         = 0                # centrality flag
				                        # =  0 fixed impact param
				                        # <> 0 between bmin and bmax
replace hydjet.hydjetMode    = "kQJetsOnly"     #Hydjet running mode.

# Valid entries:
# kHydroOnly  //jet production off (pure HYDRO event): nhsel=0
# kHydroJets  //jet production on, jet quenching off (HYDRO+njet*PYTHIA events):nhsel=1
# kHydroQJets //jet production & jet quenching on (HYDRO+njet*PYQUEN events);nhsel=2
# kJetsOnly   //jet production on, jet quenching off, HYDRO off (njet*PYTHIA events):nhsel=3
# kQJetsOnly  //jet production & jet quenching on, HYDRO off (njet*PYQUEN events):nhsel=4

replace hydjet.nMultiplicity = 26000  #mean soft multiplicity in central PbPb
					    #automatically calculated for other centralities and beams

#___________________________________________________  
   module eventana = HydjetAnalyzer { 
	untracked string moduleLabel = "hydjet"
   }
   
   module subana = SubEventAnalyzer {
	untracked string moduleLabel = "hydjet"
   }

   module GEN = PoolOutputModule
   {
      untracked string fileName = "hydjet1.root"
   }

   source = EmptySource {}

   path p1 = { hydjet, eventana, subana }
   endpath e = { GEN }

}


#__________________________________________________
